---
- name: Ensure docker-compose is installed
  ansible.builtin.package:
    name: docker-compose
    state: present

- name: Ensure Docker service is running
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true

- name: Setup Proxy Folder
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755" # Optional file permissions
    owner: "{{ main_username }}" # Optional ownership
    group: "{{ main_groupname }}" # Optional group ownership
  loop:
    - "{{ app_folder_root }}/traefik"
    - "{{ app_folder_root }}/traefik/logs"
  when: enable_proxy

- name: Ensures acme.json file exists for proxy
  ansible.builtin.file:
    path: "{{ app_folder_root }}/traefik/acme.json"
    state: touch
    owner: "{{ main_uid }}"
    group: "{{ main_gid }}"
    modification_time: preserve
    access_time: preserve
    mode: "0600"

- name: Deploy traefik files
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "{{ app_folder_root }}/{{ item }}"
    owner: "{{ main_uid }}"
    group: "{{ main_gid }}"
    mode: "0600"
  loop:
    - traefik/traefik.yml
    - traefik/config.yml
  when: enable_proxy
  tags: config

- name: Deploy traefik files
  ansible.builtin.template:
    src: ".env.j2"
    dest: "{{ app_folder_root }}/.env"
    owner: "{{ main_uid }}"
    group: "{{ main_gid }}"
    mode: "0600"
  when: enable_proxy
  tags: config

- name: Include monitoring server tasks
  ansible.builtin.include_tasks: monitoring_server.yml
  when: enable_monitoring_server
  tags: config

- name: Include Mosquitto tasks
  ansible.builtin.include_tasks: mosquitto.yml
  when: enable_mosquitto

- name: Setup Homepage Folders
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755" # Optional file permissions
    owner: "{{ main_username }}" # Optional ownership
    group: "{{ main_groupname }}" # Optional group ownership
  loop:
    - "{{ app_folder_root }}/homepage"
  when: enable_dashboard

- name: Setup Authentik Folders
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755" # Optional file permissions
    owner: "{{ main_username }}" # Optional ownership
    group: "{{ main_groupname }}" # Optional group ownership
  loop:
    - "{{ app_folder_root }}/authentik"
    - "{{ app_folder_root }}/authentik/media"
    - "{{ app_folder_root }}/authentik/certs"
    - "{{ app_folder_root }}/authentik/custom-templates"
  when: enable_authentik

- name: Setup Productivity App Folders
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755" # Optional file permissions
    owner: "{{ main_username }}" # Optional ownership
    group: "{{ main_groupname }}" # Optional group ownership
  loop:
    - "{{ app_folder_root }}/apps"
    - "{{ app_folder_root }}/apps/freshrss"
    - "{{ app_folder_root }}/apps/wallabag"
    - "{{ app_folder_root }}/apps/mealie"
    - "{{ app_folder_root }}/apps/sterlingpdf"
    - "{{ app_folder_root }}/apps/sterlingpdf/configs"
    - "{{ app_folder_root }}/apps/sterlingpdf/ocr-data"
    - "{{ app_folder_root }}/apps/hoarder"
  when: enable_productivity

- name: Setup FreshRSS Folders
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755" # Optional file permissions
    owner: "{{ main_username }}" # Optional ownership
    group: "{{ main_groupname }}" # Optional group ownership
  loop:
    - "{{ app_folder_root }}/apps"
    - "{{ app_folder_root }}/apps/freshrss"
  when: enable_rss

- name: Setup Homebridge Folders
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755" # Optional file permissions
    owner: "{{ main_username }}" # Optional ownership
    group: "{{ main_groupname }}" # Optional group ownership
  loop:
    - "{{ app_folder_root }}/homebridge"
  when: enable_homebridge

- name: Allow tcp access to tcp port 443
  community.general.ufw:
    rule: allow
    port: '443'
    proto: tcp
  when: enable_proxy

- name: Allow tcp access to tcp port 80
  community.general.ufw:
    rule: allow
    port: '80'
    proto: tcp
  when: enable_proxy

- name: Allow all access to tcp port 5432 for postgres
  community.general.ufw:
    rule: allow
    port: '5432'
    proto: tcp
  when: enable_db_server or enable_linkding

- name: Deploy Docker Compose file
  ansible.builtin.template:
    src: "templates/docker_compose.yaml.j2"
    dest: "{{ app_folder_root }}/docker-compose.yaml"
    mode: "0755" # Optional file permissions
    owner: "{{ main_username }}" # Optional ownership
    group: "{{ main_groupname }}" # Optional group ownership
  notify:
    - Start Services

- name: Run docker services
  community.docker.docker_compose_v2:
    project_src: "{{ app_folder_root }}"
    state: present
